plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.mj'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	springCloudAwsVersion = '3.1.0'
	querydslVersion = '5.1.0'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	runtimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.107.Final:osx-aarch_64'

	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'net.postgis:postgis-jdbc:2023.1.0'
//	implementation 'org.postgis:postgis-jdbc:1.3.3'

	implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
	implementation 'org.hibernate.orm:hibernate-spatial'
//	implementation "com.querydsl:querydsl-sql-spatial:${querydslVersion}"
//	implementation 'org.geolatte:geolatte-geom:1.9.0'
//	annotationProcessor "com.querydsl:querydsl-spatial:${querydslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
//	implementation "com.querydsl:querydsl-spatial:${querydslVersion}"
//	implementation "com.querydsl:querydsl-sql-spatial:${querydslVersion}"
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor	'jakarta.annotation:jakarta.annotation-api'

	implementation 'org.springframework.boot:spring-boot-starter-batch'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:${springCloudAwsVersion}")
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mysql'

	implementation 'commons-io:commons-io:2.15.1'
}

tasks.named('test') {
	useJUnitPlatform()
}
